(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{557:function(t,s,a){"use strict";a.r(s);var r=a(5),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("p",[t._v("今天敲代码用到了数组切割，不改变原数组使用"),a("code",[t._v("slice()")]),t._v(",在原数组基础上那就使用"),a("code",[t._v("splice()")]),t._v(",这就是我的认知。")]),t._v(" "),a("p",[t._v("那么问题来了：突然发现两个参数，两个参数为负的情况？第二个参数是代表长度还是停止位置？说明我对这两个方法很模糊，使用的时候需要在控制台实验一下，或者查对应方法的用法。接下来我梳理一遍常用的四个方法，看完就清清楚楚了。")]),t._v(" "),a("h2",{attrs:{id:"方法说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法说明"}},[t._v("#")]),t._v(" 方法说明")]),t._v(" "),a("h3",{attrs:{id:"strsubstring-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#strsubstring-方法"}},[t._v("#")]),t._v(" strsubstring()方法")]),t._v(" "),a("h4",{attrs:{id:"定义-substring-方法用于提取字符串中介于两个指定下标之间的字符。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-substring-方法用于提取字符串中介于两个指定下标之间的字符。"}},[t._v("#")]),t._v(" 定义：substring() 方法用于提取字符串中介于两个指定下标之间的字符。")]),t._v(" "),a("h4",{attrs:{id:"用法-stringobject-substring-start-stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-stringobject-substring-start-stop"}},[t._v("#")]),t._v(" 用法：stringObject.substring(start,stop)")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/59c28bc991a348b1a4214bdac58b06ed~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值：")]),t._v(" "),a("p",[t._v("一个新的字符串，该字符串值包含 stringObject 的一个子字符串，其内容是从 start 处到 stop-1 处的所有字符，其长度为 stop 减 start。")]),t._v(" "),a("h4",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明：")]),t._v(" "),a("p",[t._v("如果只有一个参数，就是开始位置到结束，如果开始位置大于长度会返回空字符串，开始位置小于0等于从0开始。如果有两个参数，你可以当做取两者间的字符串。substring() 方法返回的子串包括 start 处的字符，但不包括 stop 处的字符。如果参数 start 与 stop 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。如果 start 比 stop 大，那么该方法在提取子串之前会先交换这两个参数，而且该方法不改变原字符串。")]),t._v(" "),a("h4",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2fe9bceb39694b2fbe7bc937964ae51c~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[a("code",[t._v("strsubstring")]),t._v("方法只能用于切割字符串，不能用来切割数组，不改变原字符串，返回切割后结果。")]),t._v(" "),a("h3",{attrs:{id:"substr-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#substr-方法"}},[t._v("#")]),t._v(" substr()方法")]),t._v(" "),a("h4",{attrs:{id:"定义-substr-方法可在字符串中抽取从-start-下标开始的指定数目的字符。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-substr-方法可在字符串中抽取从-start-下标开始的指定数目的字符。"}},[t._v("#")]),t._v(" 定义：substr() 方法可在字符串中抽取从 start 下标开始的指定数目的字符。")]),t._v(" "),a("h4",{attrs:{id:"用法-stringobject-substr-start-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-stringobject-substr-start-length"}},[t._v("#")]),t._v(" 用法：stringObject.substr(start,length)")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3fd4be3b9b4b4fc2a71383b3d5f6927f~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"返回值-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值-2"}},[t._v("#")]),t._v(" 返回值：")]),t._v(" "),a("p",[t._v("一个新的字符串，包含从 stringObject 的 start（包括 start 所指的字符） 处开始的 length 个字符。如果没有指定 length，那么返回的字符串包含从 start 到 stringObject 的结尾的字符。")]),t._v(" "),a("h4",{attrs:{id:"实例-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-2"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8542296964e14de5bdca81edefde60fd~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"小结-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-2"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[a("code",[t._v("substr")]),t._v("方法和"),a("code",[t._v("strsubstring")]),t._v("方法一样只能用于切割字符串，不能用来切割数组，不改变原字符串，返回切割后结果。不过"),a("code",[t._v("substr")]),t._v("的第二位代表切割的长度，空则全部，第一位代表位置，区别在于可以为负数，负数为length+start，-1则是倒数第一个位置，而"),a("code",[t._v("strsubstring")]),t._v("首位负数则可以表示成0。"),a("code",[t._v("substr")]),t._v("的第二位为长度，为负则返回空字符串。")]),t._v(" "),a("h3",{attrs:{id:"slice-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#slice-方法"}},[t._v("#")]),t._v(" slice()方法")]),t._v(" "),a("h4",{attrs:{id:"定义-slice-方法可从已有的数组中返回选定的元素。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-slice-方法可从已有的数组中返回选定的元素。"}},[t._v("#")]),t._v(" 定义：slice() 方法可从已有的数组中返回选定的元素。")]),t._v(" "),a("h4",{attrs:{id:"用法-arrayobject-slice-start-end"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-arrayobject-slice-start-end"}},[t._v("#")]),t._v(" 用法：arrayObject.slice(start,end)")]),t._v(" "),a("h4",{attrs:{id:"返回值-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值-3"}},[t._v("#")]),t._v(" 返回值：")]),t._v(" "),a("p",[t._v("返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。\n可用于字符串，返回从 start 到 end （不包括该元素）的字符串。\n该方法不会改变原数组(或字符串)，您可使用负值从数组的尾部选取元素。")]),t._v(" "),a("h4",{attrs:{id:"实例-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-3"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9923ceefd5754d5faa93c9eaafe282de~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"小结-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-3"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("小结："),a("code",[t._v("slice")]),t._v("可以用于数组和字符串，我这里是这么理解"),a("code",[t._v("slice")]),t._v("的,两个参数代表开始结束位置，如果为整数就代表位置，为负数可以先转成正数(length+负数)，然后转化后，start>stop,那么为空数组或空字符。")]),t._v(" "),a("h3",{attrs:{id:"splice-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#splice-方法"}},[t._v("#")]),t._v(" splice()方法")]),t._v(" "),a("h4",{attrs:{id:"定义-splice-方法向-从数组中添加-删除项目-然后返回被删除的项目。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-splice-方法向-从数组中添加-删除项目-然后返回被删除的项目。"}},[t._v("#")]),t._v(" 定义：splice() 方法向/从数组中添加/删除项目，然后返回被删除的项目。")]),t._v(" "),a("h4",{attrs:{id:"用法-arrayobject-slice-start-end-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法-arrayobject-slice-start-end-2"}},[t._v("#")]),t._v(" 用法：arrayObject.slice(start,end)")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/981777a23b5c4fb08b6f62e4e9a80e55~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"返回值-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值-4"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("p",[t._v("返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。该方法会改变原始数组。该方法不能用于字符串。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9ac522d0224d4d3c9e0411512ea9876e~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"实例-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例-4"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/64fa3a1fda2342a79e73689946ad8f80~tplv-k3u1fbpfcp-watermark.image",alt:"image.png"}})]),t._v(" "),a("h4",{attrs:{id:"小结-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-4"}},[t._v("#")]),t._v(" 小结：")]),t._v(" "),a("p",[t._v("splice() 方法可删除从 index 处开始的零个或多个元素，并且用参数列表中声明的一个或多个值来替换那些被删除的元素。如果从 arrayObject 中删除了元素，则返回的是含有被删除的元素的数组。请注意，splice() 方法与 slice() 方法的作用是不同的，splice() 方法会直接对数组进行修改。\n第一个参数代表位置，可以为负数，为负的话，可以转换成(length+start)，第二个参数为数目，可以理解成长度，切割出来的长度，可为0,为负数等于0，没有则为之后。之后的参数为插入的该位置的值。返回出切割出来的数组，而原数组变化成不包含切割出来的数组(第三个参数存在的情况，原数组变为插值后的数组)。")]),t._v(" "),a("h3",{attrs:{id:"小结-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结-5"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),a("p",[t._v("本文想理清四个方法的区别，比如"),a("code",[t._v("charAt()")]),t._v("方法可返回指定位置的字符,在这就不说了。\n下面我整理了一个表格才看看刚刚说了四个方法之前的区别")]),t._v(" "),a("p",[a("strong",[t._v("区别分析")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("方法名")]),t._v(" "),a("th",[t._v("用于字符串")]),t._v(" "),a("th",[t._v("用于数组")]),t._v(" "),a("th",[t._v("是否改变原对象")]),t._v(" "),a("th",[t._v("第一个参数")]),t._v(" "),a("th",[t._v("第二个参数")]),t._v(" "),a("th",[t._v("其余参数")]),t._v(" "),a("th",[t._v("注意点")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("substring")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("start,负为0，只有一个参数则到结束")]),t._v(" "),a("td",[t._v("stop,负为0")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("substr")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("start,负为(length+start)，只有一个参数则到结束")]),t._v(" "),a("td",[t._v("length(c长度区别去stop，截止位置),负为0,<=0返回空")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("slice")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("start,负为(length+start)，只有一个参数则到结束")]),t._v(" "),a("td",[t._v("stop,负为(length+stop),当转化后的stop<start,则返回空")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("splice")]),t._v(" "),a("td",[t._v("否")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("是")]),t._v(" "),a("td",[t._v("start,负为(length+start)，只有一个参数则到结束")]),t._v(" "),a("td",[t._v("length,负为0,stop<=0,则返回空")]),t._v(" "),a("td",[t._v("插入值")]),t._v(" "),a("td",[t._v("有插入值原数组会变成切割后+插入值后组成的新数组")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);